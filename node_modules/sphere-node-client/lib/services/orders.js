var BaseService, OrderService,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseService = require('./base');


/**
 * Creates a new OrderService.
 * @class OrderService
 */

OrderService = (function(_super) {
  __extends(OrderService, _super);

  function OrderService() {
    return OrderService.__super__.constructor.apply(this, arguments);
  }


  /**
   * @const
   * @private
   * Base path for a Orders API resource endpoint
   * @type {String}
   */

  OrderService.baseResourceEndpoint = '/orders';


  /**
   * Creates directly an Order by importing it instead of creating it from a Cart.
   * @param {Object} body The payload as JSON object
   * @return {Promise} A promise, fulfilled with an {Object} or rejected with a {SphereError}
   */

  OrderService.prototype["import"] = function(body) {
    this._currentEndpoint = '/orders/import';
    return this.save(body);
  };

  return OrderService;

})(BaseService);


/**
 * The {@link OrderService} service.
 */

module.exports = OrderService;

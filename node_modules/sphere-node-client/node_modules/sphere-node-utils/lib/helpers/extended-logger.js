var Logger, _;

_ = require('underscore');

Logger = require('./logger');


/**
 * Creates a new instance of the ExtendedLogger
 * @class ExtendedLogger
 */

module.exports = (function() {
  function _Class(options) {
    var logConfig, _ref;
    if (options == null) {
      options = {};
    }
    _ref = _.defaults(options, {
      additionalFields: {}
    }), logConfig = _ref.logConfig, this.additionalFields = _ref.additionalFields;
    this.tmpAdditionalFields = {};
    this.bunyanLogger = new Logger(logConfig);
  }

  _Class.prototype._wrapOptions = function(type, opts, msg) {
    if (!msg && _.isString(opts)) {
      msg = opts;
      opts = {};
    }
    _.extend(opts, this.additionalFields, this.tmpAdditionalFields);
    this.tmpAdditionalFields = {};
    return this.bunyanLogger[type](opts, msg);
  };

  _Class.prototype.withField = function(obj) {
    _.extend(this.tmpAdditionalFields, obj);
    return this;
  };

  _Class.prototype.trace = function(opts, msg) {
    return this._wrapOptions('trace', opts, msg);
  };

  _Class.prototype.debug = function(opts, msg) {
    return this._wrapOptions('debug', opts, msg);
  };

  _Class.prototype.info = function(opts, msg) {
    return this._wrapOptions('info', opts, msg);
  };

  _Class.prototype.warn = function(opts, msg) {
    return this._wrapOptions('warn', opts, msg);
  };

  _Class.prototype.error = function(opts, msg) {
    return this._wrapOptions('error', opts, msg);
  };

  _Class.prototype.fatal = function(opts, msg) {
    return this._wrapOptions('fatal', opts, msg);
  };

  return _Class;

})();
